What happens when you initialize a repository? Why do you need to do it?
	
	Git creates a '.git' folder, containing the meta-data for the project.
	Once initialized you are able to save commits and view the projects history.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	Only files that are added to the staging area are being used for the following commit.
	This allows the user to only add some of the files he's been working on, to the next commit.

How can you use the staging area to make sure you have one commit per logical
change?
	
	Only add one logical change to the staging area at once, then commit.
	To check for the differences between staging area and repository, use 'git diff --staged'

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?